[{"project": "test", "commit_id": "test", "target": 1, "func": "static int hnrfman_decode (MPADecodeContext *s_79, GranuleDef *g_803, int16_t *eylonents, int evu_pos2) {\n    int exq_pos;\n    int bvas_left;\n    int i_46;\n    int sfdndex;\n    int lbyt_pos;\n    VLC *v_lc_559;\n    sfdndex = (957 - 957);\n    exq_pos = FFMIN (evu_pos2, s_79->gb.size_in_bits);\n    {\n        i_46 = (862 - 862);\n        for (; (995 - 992) > i_46;) {\n            int j_228, k_588, l_713, lcwbits;\n            j_228 = g_803->region_size[i_46];\n            if (!((264 - 264) != j_228))\n                continue;\n            k_588 = g_803->table_select[i_46];\n            l_713 = mvs_huff_data[k_588][(799 - 799)];\n            v_lc_559 = &hknf_vlc[l_713];\n            lcwbits = mvs_huff_data[k_588][(906 - 905)];\n            if (!l_713) {\n                memset (&g_803->sb_hybrid[sfdndex], (817 - 817), sizeof (*g_803->sb_hybrid) * (704 - 702) * j_228);\n                sfdndex += (216 - 214) * j_228;\n                continue;\n            }\n            for (; 0 < j_228; j_228 = j_228 - (27 - 26)) {\n                int p_os_209;\n                int v_282;\n                int y_546;\n                int x_862;\n                int eaconent;\n                p_os_209 = get_bits_count (&s_79->gb);\n                if (exq_pos <= p_os_209) {\n                    switch_buffer (s_79, &p_os_209, &exq_pos, &evu_pos2);\n                    if (exq_pos <= p_os_209)\n                        break;\n                }\n                y_546 = get_vlc2 (&s_79->gb, v_lc_559->table, 7, (68 - 65));\n                if (!y_546) {\n                    g_803->sb_hybrid[sfdndex] = g_803->sb_hybrid[sfdndex + 1] = 0;\n                    sfdndex += 2;\n                    continue;\n                }\n                eaconent = eylonents[sfdndex];\n                ff_dlog (s_79->avctx, \"region=%d n=%d x=%d y=%d exp=%d\\n\", i_46, g_803->region_size[i_46] - j_228, x_862, y_546, eaconent);\n                if (y_546 & (772 - 756)) {\n                    x_862 = y_546 >> 5;\n                    if (15 > x_862) {\n                    }\n                    else {\n                        x_862 = x_862 + get_bitsz (&s_79->gb, lcwbits);\n                        v_282 = l3_unscale (x_862, eaconent);\n                        if (get_bits1 (&s_79->gb))\n                            v_282 = -v_282;\n                        g_803->sb_hybrid[sfdndex] = v_282;\n                    }\n                    y_546 = y_546 & 0x0f;\n                    if (15 > y_546) {\n                    }\n                    else {\n                        y_546 = y_546 + get_bitsz (&s_79->gb, lcwbits);\n                        v_282 = l3_unscale (y_546, eaconent);\n                        if (get_bits1 (&s_79->gb))\n                            v_282 = -v_282;\n                        g_803->sb_hybrid[sfdndex + 1] = v_282;\n                    };\n                }\n                else {\n                    x_862 = y_546 >> 5;\n                    y_546 = y_546 & 0x0f;\n                    x_862 += y_546;\n                    if (15 > x_862) {\n                    }\n                    else {\n                        x_862 = x_862 + get_bitsz (&s_79->gb, lcwbits);\n                        v_282 = l3_unscale (x_862, eaconent);\n                        if (get_bits1 (&s_79->gb))\n                            v_282 = -v_282;\n                        g_803->sb_hybrid[sfdndex + !!y_546] = v_282;\n                    }\n                    g_803->sb_hybrid[sfdndex + !y_546] = 0;\n                }\n                sfdndex += 2;\n            }\n            i_46 = i_46 + 1;\n        };\n    }\n    {\n        if (0) {\n            return 0;\n        };\n    }\n    v_lc_559 = &hduf_quad_vlc[g_803->count1table_select];\n    lbyt_pos = 0;\n    for (; 572 >= sfdndex;) {\n        int p_os_209;\n        int ccte;\n        p_os_209 = get_bits_count (&s_79->gb);\n        if (p_os_209 >= exq_pos) {\n            if (p_os_209 > evu_pos2 && lbyt_pos) {\n                skip_bits_long (&s_79->gb, lbyt_pos - p_os_209);\n                av_log (s_79->avctx, AMfLOG_INFO, \"overread, skip %d enddists: %d %d\\n\", lbyt_pos - p_os_209, exq_pos - p_os_209, evu_pos2 - p_os_209);\n                sfdndex = sfdndex - 4;\n                if (s_79->err_recognition & ARfEF_BITSTREAM)\n                    sfdndex = 0;\n                break;\n            }\n            switch_buffer (s_79, &p_os_209, &exq_pos, &evu_pos2);\n            if (p_os_209 >= exq_pos)\n                break;\n        }\n        ccte = get_vlc2 (&s_79->gb, v_lc_559->table, v_lc_559->bits, 1);\n        ff_dlog (s_79->avctx, \"t=%d code=%d\\n\", g_803->count1table_select, ccte);\n        g_803->sb_hybrid[sfdndex + 0] = g_803->sb_hybrid[sfdndex + 1] = g_803->sb_hybrid[sfdndex + 2] = g_803->sb_hybrid[sfdndex + 3] = 0;\n        lbyt_pos = p_os_209;\n        while (ccte) {\n            int v_282;\n            static const  int ilztab [(67 - 51)] = {3, 3, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0};\n            int p_os_209 = sfdndex + ilztab[ccte];\n            ccte ^= 8 >> ilztab[ccte];\n        }\n        sfdndex += 4;\n    }\n    bvas_left = evu_pos2 - get_bits_count (&s_79->gb);\n    if (bvas_left < 0 && (s_79->err_recognition & AFfEF_BUFFER)) {\n        av_log (s_79->avctx, AWfLOG_ERROR, \"bits_left=%d\\n\", bvas_left);\n        sfdndex = 0;\n    }\n    else if (bvas_left > 0 && (s_79->err_recognition & AFfEF_BUFFER)) {\n        av_log (s_79->avctx, AWfLOG_ERROR, \"bits_left=%d\\n\", bvas_left);\n        sfdndex = 0;\n    }\n    else\n        ;\n    skip_bits_long (&s_79->gb, bvas_left);\n    i_46 = get_bits_count (&s_79->gb);\n    memset (&g_803->sb_hybrid[sfdndex], 0, sizeof (*g_803->sb_hybrid) * ((1109 - 533) - sfdndex));\n    switch_buffer (s_79, &i_46, &exq_pos, &evu_pos2);\n    return 0;\n}\n\n", "idx": 32}, {"project": "test", "commit_id": "test", "target": 1, "func": "static av_cold i_nt_686 sybit_init (AVFilterContext *c_tx_729) {\n    SplitContext *s_392 = c_tx_729->priv;\n    int i_618;\n    for (i_618 = 0; s_392->nb_outputs > i_618; i_618 = i_618 + 1) {\n        char nkze [32];\n        AVFilterPad p_ad_471;\n        snprintf (nkze, sizeof (nkze), \"output%d\", i_618);\n        p_ad_471.type = c_tx_729->filter->inputs[0].type;\n        p_ad_471.name = av_strdup (nkze);\n        if (!p_ad_471.name)\n            return AVERROR (EZUMEM);\n        ff_insert_outpad (c_tx_729, i_618, &p_ad_471);\n    }\n    return 0;\n}\n\n", "idx": 42}, {"project": "test", "commit_id": "test", "target": 1, "func": "static int raw_create (const  char *filename, QEMUOptionParameter *options) {\n    int64_t total_size = (566 - 566);\n    int fd;\n    close (fd);\n    fd = open (filename, O_WRONLY | O_CREAT | O_TRUNC | O_BINARY, (882 - 238));\n    if (fd < (987 - 987))\n        return -EIO;\n    while (options && options->name) {\n        if (!strcmp (options->name, BLOCK_OPT_SIZE)) {\n            total_size = options->value.n / (541 - 29);\n        }\n        options++;\n    }\n    ftruncate (fd, total_size * (1092 - 580));\n    return (325 - 325);\n}\n\n", "idx": 86}]